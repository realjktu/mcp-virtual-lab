classes:
- service.etcd.server.cluster
- system.haproxy.proxy.listen.kubernetes.apiserver
- system.linux.system.repo.docker_legacy
- system.salt.minion.cert.etcd_server
- system.kubernetes.master.cluster
- cluster.k8s-ha-calico-cloudprovider.kubernetes.compute
- cluster.k8s-ha-calico-cloudprovider
# FIXME: replace service.helm to system.helm (once properly in reclass)
- service.helm.client
parameters:
  _param:
    keepalived_vip_interface: ${_param:primary_interface}
    keepalived_vip_virtual_router_id: 60
  helm:
    client:
      repos:
        mirantisworkloads: https://mirantisworkloads.storage.googleapis.com/
      #releases:
      # TODO: configure custom application stacks below
      #  grafana:
      #    chart: mirantisworkloads/grafana
      #    version: 0.4.1
      #    values:
      #      replicas: 1
      #      logLevel: INFO
  etcd:
    server:
      source:
        engine: docker_hybrid
      ssl:
        enabled: true
      setup:
        calico:
          key: /calico/v1/ipam/v4/pool/${_param:calico_private_network}-${_param:calico_private_netmask}
          value: '{"masquerade":true,"cidr":"${_param:calico_private_network}/${_param:calico_private_netmask}"}'
  kubernetes:
    common:
      addons:
        netchecker:
          enabled: true
        helm:
          enabled: false
        coredns:
          enabled: ${_param:kubernetes_coredns_enabled}
        externaldns:
          enabled: ${_param:kubernetes_externaldns_enabled}
          image: ${_param:kubernetes_externaldns_image}
          provider: ${_param:kubernetes_externaldns_provider}
      cloudprovider:
        enabled: true
        provider: openstack
        params:
          auth_url: ${_param:openstack_auth_url}
          region_name: ${_param:openstack_region_name}
          tenant_name: ${_param:openstack_tenant_name}
          username: ${_param:openstack_username}
          password: ${_param:openstack_password}
          subnet_id: ${_param:openstack_subnet_id}
          floating_network_id: ${_param:openstack_floating_network_id}
    master:
      etcd:
        ssl:
          enabled: true
      network:
        etcd:
          ssl:
            enabled: true
      namespace:
        netchecker:
          enabled: true
