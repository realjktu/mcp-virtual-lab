classes:
#- system.linux.system.repo.docker
- system.linux.system.repo.docker_legacy
- service.docker.host
- system.salt.minion.cert.etcd_client
- system.salt.minion.cert.k8s_client_single
- system.kubernetes.pool.single
- cluster.k8s-compact.kubernetes
parameters:
  kubernetes:
    pool:
      cluster_dns: ${_param:kubernetes_internal_dns_address}
      kubelet:
        address: ${_param:single_address}
      network:
        etcd:
          ssl:
            enabled: true
        image: ${_param:kubernetes_calico_image}
        calicoctl:
          image: ${_param:kubernetes_calicoctl_image}
        cni:
          image: ${_param:kubernetes_calico_cni_image}
    common:
      addons:
        virtlet:
          enabled: ${_param:kubernetes_virtlet_enabled}
          namespace: ${_param:kubernetes_addon_namespace}
          image: ${_param:kubernetes_virtlet_image}
          hosts:
          - kube01
      hyperkube:
        image: ${_param:kubernetes_hyperkube_image}
  docker:
    host:
      pkgs:
        - ${_param:kubernetes_docker_package}
        - python-docker
      options:
        bip: 172.31.255.1/24
        storage-driver: overlay2
  linux:
    network:
      resolv:
        dns:
          - ${_param:kubernetes_internal_dns_address}
          - 172.18.176.4
          - 172.18.176.7
      interface:
        ens3:
          enabled: true
          type: eth
          proto: static
          name: ${_param:primary_interface}
          address: ${_param:single_address}
          netmask: 255.255.255.0
          gateway: 192.168.122.1
          route:
            kubernetes_services:
              address: 10.201.0.0
              netmask: 255.255.0.0
              gateway: ${_param:single_address}
