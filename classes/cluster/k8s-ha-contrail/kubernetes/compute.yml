classes:
- system.linux.system.repo.docker_legacy
- system.kubernetes.pool.cluster
- system.linux.network.hosts
- system.salt.minion.cert.k8s_client
- system.salt.minion.cert.etcd_client
- cluster.k8s-ha-contrail.opencontrail.compute
- cluster.k8s-ha-contrail
parameters:
  linux:
    network:
      interface:
        ens4:
          enabled: true
          type: eth
          proto: manual
          ipflush_onchange: true
        vhost0:
          enabled: true
          type: eth
          mtu: 1500
          address: ${_param:single_address}
          netmask: '255.255.255.0'
          pre_up_cmds:
          - /usr/lib/contrail/if-vhost0
          use_interfaces:
          - ens4
  docker:
    host:
      pkgs:
        - ${_param:kubernetes_docker_package}
        - python-docker
      options:
        bip: 172.31.255.1/24
  kubernetes:
    pool:
      kubelet:
        address: ${_param:single_address}
      network:
        engine: opencontrail
        config:
          api:
            host: ${_param:opencontrail_control_address}
        etcd:
          ssl:
            enabled: true
        image: ${_param:kubernetes_calico_image}
        calicoctl:
          image: ${_param:kubernetes_calicoctl_image}
        cni:
          image: ${_param:kubernetes_calico_cni_image}
        contrail_cni:
          image: ${_param:kubernetes_opencontrail_cni_image}
    common:
      addons:
        virtlet:
          enabled: ${_param:kubernetes_virtlet_enabled}
          namespace: ${_param:kubernetes_addon_namespace}
          image: ${_param:kubernetes_virtlet_image}
          hosts:
          - ${linux:system:name}
      hyperkube:
        image: ${_param:kubernetes_hyperkube_image}
